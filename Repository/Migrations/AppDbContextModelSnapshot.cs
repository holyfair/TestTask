// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Context;

namespace Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.DatabaseModels.BaseCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BaseCustomers");
                });

            modelBuilder.Entity("Repository.DatabaseModels.MrGreenCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BaseCustomerInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonalNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BaseCustomerInfoId")
                        .IsUnique();

                    b.ToTable("MrGreenCustomers");
                });

            modelBuilder.Entity("Repository.DatabaseModels.RedBetCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BaseCustomerInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FavoriteFootballTeam")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("BaseCustomerInfoId")
                        .IsUnique();

                    b.ToTable("RedBetCustomers");
                });

            modelBuilder.Entity("Repository.DatabaseModels.MrGreenCustomer", b =>
                {
                    b.HasOne("Repository.DatabaseModels.BaseCustomer", "BaseCustomerInfo")
                        .WithOne()
                        .HasForeignKey("Repository.DatabaseModels.MrGreenCustomer", "BaseCustomerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseCustomerInfo");
                });

            modelBuilder.Entity("Repository.DatabaseModels.RedBetCustomer", b =>
                {
                    b.HasOne("Repository.DatabaseModels.BaseCustomer", "BaseCustomerInfo")
                        .WithOne()
                        .HasForeignKey("Repository.DatabaseModels.RedBetCustomer", "BaseCustomerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseCustomerInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
